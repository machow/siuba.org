---
title: "Backend Examples ðŸš§"
jupyter:
  jupytext:
    formats: 'qmd:quarto'
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.13.6
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

```{python}
#| include: false
import pandas as pd

pd.set_option("display.max_rows", 5)
```

```{python}
from siuba import _, group_by, filter, show_query, tbl
from siuba.sql import LazyTbl
from siuba.data import cars

from sqlalchemy import create_engine
```

## Demo query

We'll use the following lazy pipe to demonstrate each backend.
It groups by the `cyl` column, then filters by `mpg`.

```{python}
filter_mpg = (
    _
    >> group_by(_.cyl)
    >> filter(_.mpg < _.mpg.mean())
)
```

For example, here is the pipe called on pandas data.

```{python}
cars >> filter_mpg
```


## duckdb

```{python}
engine = create_engine("duckdb:///:memory:")

tbl_cars_duckdb = tbl(engine, "cars", cars)
```

```{python}

tbl_filtered = tbl_cars_duckdb >> filter_mpg
tbl_filtered
```

```{python}
q = tbl_filtered >> show_query(simplify=True)
```


## sqlite

```{python}
engine = create_engine("sqlite:///:memory:")
cars.to_sql("cars", engine, index=False)

tbl_cars_sqlite = tbl(engine, "cars")
```

```{python}

tbl_filtered = tbl_cars_sqlite >> filter_mpg
tbl_filtered
```

```{python}
q = tbl_filtered >> show_query(simplify=True)
```


## bigquery

bigquery is thoroughly tested, but needs to be added to this page!


## mysql

mysql is thoroughly tested, but needs to be added to this page!


## postgresql

postgresql is thoroughly tested, but needs to be added to this page!


## snowflake

snowflake is thoroughly tested, but needs to be added to this page!
