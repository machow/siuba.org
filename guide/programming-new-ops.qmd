---
title: "Custom column ops"
jupyter:
  jupytext:
    formats: 'qmd:quarto'
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.14.0
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

Use `symbolic_dispatch()` to create new functions for operating on columns.

This function creates what are called single generic functions---
which let you register different ways to handle different types of data.


## Defining a new function

```{python}
from siuba.siu import symbolic_dispatch
from pandas.core.groupby import SeriesGroupBy
from pandas import Series

@symbolic_dispatch
def cummean(x):
    raise NotImplementedError(f"Not implemented for class {type(x)}")

@cummean.register
def cummean(x: Series):
    """Return a same-length array, containing the cumulative mean."""
    return x.expanding().mean()
```

## Registering SQL translation

## Check whether a translation exists

